<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 定义活动数据操作映射文件，关联com.rjs.smartcommunity.mapper.ActivityMapper接口 -->
<mapper namespace="com.rjs.smartcommunity.mapper.ActivityMapper">
  <!-- 定义一个名为deleteById的方法，根据传入的id参数删除活动 -->
  <delete id="deleteById">
    delete
    from activity
    where id = #{id}
  </delete>

  <!-- 定义一个名为insert的方法，插入一个Activity实体（支持自动生成主键） -->
  <insert id="insert" parameterType="com.rjs.smartcommunity.entity.Activity"
    useGeneratedKeys="true">
    insert into activity
    <!-- 使用trim标签动态构建插入字段列表，仅包含非空属性 -->
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="descr != null">
        descr,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="name != null">
        #{name},
      </if>
      <if test="cover != null">
        #{cover},
      </if>
      <if test="descr != null">
        #{descr},
      </if>
      <if test="start != null">
        #{start},
      </if>
      <if test="end != null">
        #{end},
      </if>
      <if test="content != null">
        #{content},
      </if>
      <if test="address != null">
        #{address},
      </if>
    </trim>
  </insert>

  <!-- 定义一个名为selectAll的方法，查询所有活动（可根据传入的id、title、content、time、user参数进行条件筛选），结果按id降序排序 -->
  <select id="selectAll" resultType="com.rjs.smartcommunity.entity.Activity">
    select
    <!-- 引用基础列列表SQL片段 -->
    <include refid="Base_Column_List"/>
    from activity
    <where>
      <if test="name != null">
        and name like concat('%', #{name}, '%')
      </if>
    </where>
    <!-- 按id字段降序排序结果 -->
    order by id desc
  </select>

  <!-- 定义一个名为selectById的方法，根据传入的id参数查询单个活动 -->
  <select id="selectById" resultType="com.rjs.smartcommunity.entity.Activity">
    select
    <!-- 引用基础列列表SQL片段 -->
    <include refid="Base_Column_List"/>
    from activity
    <!-- 确定查询条件：id等于传入的id参数 -->
    where id = #{id}
  </select>

  <!-- 定义一个基础列列表SQL片段，包含活动表的所有字段，供其他SQL语句引用 -->
  <sql id="Base_Column_List">
    id,
    name,
    cover,
    descr,
    start,
    end,
    content,
    address
  </sql>

  <!-- 定义一个名为updateById的方法，根据传入的id参数更新活动，仅更新非空属性 -->
  <update id="updateById" parameterType="com.rjs.smartcommunity.entity.Activity">
    update activity
    <!-- 使用set标签动态构建更新字段列表 -->
    <set>
      <if test="name != null">
        name = #{name},
      </if>
      <if test="cover != null">
        cover = #{cover},
      </if>
      <if test="descr != null">
        descr = #{descr},
      </if>
      <if test="start != null">
        start = #{start},
      </if>
      <if test="end != null">
        end = #{end},
      </if>
      <if test="content != null">
        content = #{content},
      </if>
      <if test="address != null">
        address = #{address},
      </if>
    </set>
    <!-- 确定更新条件：id等于传入的id参数 -->
    where id = #{id}
  </update>
</mapper>
